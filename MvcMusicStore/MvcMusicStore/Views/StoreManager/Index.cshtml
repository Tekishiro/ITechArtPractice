@model PagedList.IPagedList<MvcMusicStore.Models.Album>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@helper Truncate(string input, int length)
    {
        if (input.Length <= length)
            { @input }
        else
        {
            @input.Substring(0, length)<text>...</text>
        }
    }

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.Artist.Name)*@
            Artist
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Genre.Name)*@
            Genre
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Title)*@
            Title
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Price)*@
            Price
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Truncate(item.Artist.Name, 25)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre.Name)
        </td>
        <td>
            @Truncate(item.Title, 25)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.AlbumId }) |
            @Html.ActionLink("Details", "Details", new { id=item.AlbumId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.AlbumId })
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount<Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
